name: Convert Skill Sheets

on:
  push:
    branches: [ main, master ]
    paths:
      - 'skill-sheets/**/*.md'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'skill-sheets/**/*.md'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  convert:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create output directories
      run: |
        mkdir -p output/excel
        mkdir -p output/html
        mkdir -p output/pdf
        
    - name: Convert to Excel
      run: npm run convert:excel
      
    - name: Convert to HTML
      run: node scripts/create-html-skillsheet.js
      
    - name: Install Puppeteer dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libxss1 \
          libasound2 \
          libxtst6 \
          libxrandr2 \
          libasound2 \
          libpangocairo-1.0-0 \
          libatk1.0-0 \
          libcairo-gobject2 \
          libgtk-3-0 \
          libgdk-pixbuf2.0-0
          
    - name: Convert to PDF
      run: npm run convert:pdf
      env:
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: false
        
    - name: List generated files
      run: |
        echo "Generated files:"
        find output -type f -name "*.xlsx" -o -name "*.html" -o -name "*.pdf" | sort
        
    - name: Upload Excel files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: excel-files
        path: output/excel/*.xlsx
        retention-days: 30
        
    - name: Upload HTML files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: html-files
        path: output/html/*.html
        retention-days: 30
        
    - name: Upload PDF files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pdf-files
        path: output/pdf/*.pdf
        retention-days: 30
        
    - name: Upload all files as combined artifact
      uses: actions/upload-artifact@v4
      with:
        name: skill-sheets-all-formats
        path: output/
        retention-days: 90
        
    - name: Prepare pages deployment
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        mkdir -p pages
        cp -r output/* pages/
        # Create index.html for GitHub Pages
        cat > pages/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="ja">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>スキルシート ダウンロード</title>
            <style>
                body { font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 40px; background: #f5f5f5; }
                .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                h1 { color: #333; border-bottom: 2px solid #007acc; padding-bottom: 10px; }
                h2 { color: #555; margin-top: 30px; }
                .file-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin: 20px 0; }
                .file-card { background: #f8f9fa; padding: 20px; border-radius: 6px; border: 1px solid #dee2e6; }
                .file-card h3 { margin-top: 0; color: #007acc; }
                .file-link { display: inline-block; background: #007acc; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; margin: 5px 5px 5px 0; }
                .file-link:hover { background: #005a9e; }
                .info { background: #e7f3ff; padding: 15px; border-radius: 4px; margin: 20px 0; border-left: 4px solid #007acc; }
                .timestamp { color: #666; font-size: 0.9em; margin-top: 20px; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>📄 スキルシート ダウンロード</h1>
                
                <div class="info">
                    <strong>💡 自動生成されたスキルシートファイル</strong><br>
                    Markdownファイルから自動的に変換されたスキルシートをダウンロードできます。
                </div>
                
                <h2>📊 ファイル形式別ダウンロード</h2>
                
                <div class="file-grid">
                    <div class="file-card">
                        <h3>📄 PDF版</h3>
                        <p>印刷に最適化されたPDFファイル</p>
                        <div id="pdf-links"></div>
                    </div>
                    
                    <div class="file-card">
                        <h3>📊 Excel版</h3>
                        <p>編集可能なExcelファイル</p>
                        <div id="excel-links"></div>
                    </div>
                    
                    <div class="file-card">
                        <h3>🌐 HTML版</h3>
                        <p>Webブラウザで表示可能</p>
                        <div id="html-links"></div>
                    </div>
                </div>
                
                <div class="info">
                    <strong>📖 使用方法:</strong><br>
                    • PDF版: そのまま印刷や閲覧に使用<br>
                    • Excel版: 内容の編集や加工に使用<br>
                    • HTML版: ブラウザで表示、PDFとして保存も可能
                </div>
                
                <div class="timestamp">
                    最終更新: <span id="update-time"></span>
                </div>
            </div>
            
            <script>
                // ファイルリストを生成
                const generateFileLinks = async () => {
                    const now = new Date().toLocaleString('ja-JP');
                    document.getElementById('update-time').textContent = now;
                    
                    // 静的ファイルリスト（実際のファイルに基づいて更新）
                    const files = {
                        pdf: ['zukizukizuki_2025-06-07.pdf'],
                        excel: ['zukizukizuki_2025-06-07.xlsx'],
                        html: ['zukizukizuki_2025-06-07.html']
                    };
                    
                    Object.entries(files).forEach(([type, fileList]) => {
                        const container = document.getElementById(`${type}-links`);
                        fileList.forEach(filename => {
                            const link = document.createElement('a');
                            link.href = `${type}/${filename}`;
                            link.className = 'file-link';
                            link.textContent = filename;
                            link.download = filename;
                            container.appendChild(link);
                        });
                    });
                };
                
                generateFileLinks();
            </script>
        </body>
        </html>
        EOF
        
    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v3
      with:
        path: pages
        
  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: convert
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4