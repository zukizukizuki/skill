name: Convert Skill Sheets and Deploy

on:
  push:
    branches: [ main, master ]
    paths:
      - 'skill-sheets/**/*.md'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'skill-sheets/**/*.md'
      - 'scripts/**'
      - 'package.json'
      - 'package-lock.json'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  convert:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Create output directories
      run: |
        mkdir -p output/excel
        mkdir -p output/html
        mkdir -p output/pdf
        
    - name: Convert to Excel
      run: npm run convert:excel
      
    - name: Convert to HTML
      run: node scripts/create-html-skillsheet.js
      
    - name: Install Puppeteer dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          chromium \
          xvfb \
          fonts-noto-cjk
          
    - name: Convert to PDF
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        sleep 3
        echo "Starting PDF conversion..."
        npm run convert:pdf || echo "PDF conversion failed, continuing workflow..."
        echo "PDF conversion step completed"
      env:
        PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium
        PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
      continue-on-error: true
        
    - name: Check PDF directory and files
      run: |
        echo "Checking output directory structure:"
        ls -la output/ || echo "output directory does not exist"
        ls -la output/pdf/ || echo "output/pdf directory does not exist"
        echo ""
        echo "Generated files:"
        find output -type f -name "*.xlsx" -o -name "*.html" -o -name "*.pdf" | sort || echo "No files found"
        
    - name: Upload Excel files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: excel-files
        path: output/excel/*.xlsx
        retention-days: 30
        
    - name: Upload HTML files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: html-files
        path: output/html/*.html
        retention-days: 30
        
    - name: Upload PDF files as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pdf-files
        path: output/pdf/*.pdf
        retention-days: 30
        
    - name: Upload all files as combined artifact
      uses: actions/upload-artifact@v4
      with:
        name: skill-sheets-all-formats
        path: output/
        retention-days: 90
        
    - name: Generate PDF instructions if needed
      run: |
        node scripts/generate-pdf-instructions.js || echo "Failed to generate PDF instructions"
        
    - name: Generate index.html
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        node scripts/generate-index.js
        
    - name: Prepare pages deployment
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        mkdir -p pages
        cp -r output/* pages/
        cp .nojekyll pages/
        
    - name: Upload Pages artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v3
      with:
        path: pages
        
  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: convert
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout: 600000
          error_count: 10
          reporting_interval: 5000